---
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import { render } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import convertToUrl from "../../lib/convertUrl";
import { getEntries } from "astro:content";
import { Image } from "astro:assets";

export const getStaticPaths = (async () => {
	const projects = await getCollection("projects")

	return projects.map(({data}) => ({
		params: {
			id: `${convertToUrl(data.title)}`
		}
	})) as GetStaticPathsResult
}) satisfies GetStaticPaths;


const { id } = Astro.params

if(!id) {
    return Astro.redirect(404)
}

const projects = await getCollection("projects")
const project = projects.find(project => `${convertToUrl(project.data.title)}` == id)

if(!project) {
    return Astro.redirect(404)
}

const { data: { title, image, category, students: studentIds }} = project

const allStudents = await getCollection("students")
const students = allStudents.filter(student => {
    const studentId = `@${convertToUrl(student.data.name)}`

    return studentIds.includes(studentId)
})

const { Content } = await render(project)

---


<Layout>
    <div class="grid grid-cols-[1fr_1fr_1fr_1fr]">
        <g-region class="row-span-2 col-span-2 ">
            
        </g-region>
        <g-region class="row-span-2 col-span-2 p-2">
            <h1 class="font-bold">{title}</h1>
            
        </g-region>
        <g-region>
            <div class="w-full h-full rounded-full border grid place-items-center">
                <p>{category}</p>
            </div>
        </g-region>
        <g-region>
            <div class="w-full h-full rounded-full border">

            </div>
        </g-region>
        <g-region>
            <div class="w-full h-full rounded-full border">

            </div>
        </g-region>
        <g-region>
            <div class="w-full h-full rounded-full border">

            </div>
        </g-region>
        <g-region class="col-span-4">
            <Image alt="" src={image}></Image>
            <!-- <img src={image.src} alt="a" class="w-full h-full object-cover"> -->
        </g-region>
    
        
    
        <div class="col-span-4 p-2">
            <h2>made by</h2>
            <ul>
                {students.map(student => (
                    <li>
                        <a href={`/@${convertToUrl(student.data.name)}`}>
                            {student.data.name}
                        </a>
                    </li>
                ))}
            </ul>

        </div>
    
        <g-region class="col-span-4 p-2">
            <Content/>
        </g-region>

        <g-region class="col-span-2">

        </g-region>

    </div>
</Layout>

<style>
    g-region {
        border: 1px solid white;
        aspect-ratio: 1;
    }
</style>