---
import type { GetStaticPaths, GetStaticPathsResult } from "astro";
import { getCollection } from "astro:content";
import convertToUrl from "../lib/convertUrl";
import Layout from "../layouts/Layout.astro";
import { render } from "astro:content";
import { Image } from "astro:assets";
import fallbackImage from "@assets/fallback.svg"

export const getStaticPaths = (async () => {
	const students = await getCollection("students")
	
	return students.map(({data}) => ({
		params: {
			id: `@${convertToUrl(data.name)}`
		}
	})) as GetStaticPathsResult
}) satisfies GetStaticPaths;


const { id } = Astro.params

if(!id) {
    return Astro.redirect(404)
}

const students = await getCollection("students")
const student = students.find(student => `@${convertToUrl(student.data.name)}` == id)

if(!student) {
    return Astro.redirect(404)
}

const projects = await getCollection("projects")
const studentWorks = projects.filter(project => project.data.students.includes(String(id)))

const { data: { name, links, image }} = student

const { Content } = await render(student)

---


<Layout>


    <div class="w-full grid grid-cols-[auto_33ch_33ch_auto] grid-rows-2 py-24">
        <div class="row-start-1 col-end-5 col-start-1 border-b-white border-b-2"></div>
        
        <div class="border-2 border-white col-start-2 row-start-1 row-end-3">
            {image ? (
                <Image quality={"dither"} width={1024}  src={image} alt=""></Image>
            ) : (
                <Image quality="dither" src={fallbackImage} alt=""/>
            )}
        </div>
        
        <div class="text-3xl row-start-2 col-start-3">
            <h1 class=" p-2 uppercase">{name}</h1>

        </div>
    </div>

    <div class="w-full grid grid-cols-[auto_66ch_auto]">
        <main class="col-start-2">
            <ul>
                {Object.entries(links).map(([link, url]) => (
                    <li>
                        <a href={link === "instagram" ? `https://instagram.com/${url}` : url} >
                            
                            {link}
                        </a>
                    </li>
                ))}
            </ul>
            <article class="mx-auto max-w-[65ch]">
                <Content/>
            </article>
        </main>


        <div class="col-start-2">
            {studentWorks.map(({data: {title, image}}) => (
                <div class="work">
                    <a href={`/projects/${convertToUrl(title)}`}>
                        {title}
                        {image && (
                            <Image src={image} alt="" />
                        )}
                    </a>
                </div>
            ))}
        </div>
    </div>
    
</Layout>

<style>
    .work {
        border: 1px solid black;
        display: grid;
    }

    img {
        max-width: 400px;
    }
</style>